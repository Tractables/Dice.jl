using Pkg; Pkg.activate(@__DIR__)
using Alea, Distributions

precision = 2
DFiP = DistFix{9+precision, precision}
num_pieces = 8
mult_arg = false

ys = DFiP.([-4.42240141499726, -2.38254474811358, 4.46003506755005, -2.06779349559439,
-1.90472822115053, -1.38063238393424, 2.4560053700776, -2.16525118775164, 3.59283111997059,
-1.37514949864802, 3.11791541978786, -2.42680944749416, -3.09428403855117, -3.20476382063687,
-3.85911355416889, -1.96099930226549, -1.67053823688585, 1.65153535395172, -2.46498438286183,
2.47088045459675, -1.90793566789462, 1.93824458416405, -3.48517985531111, 2.67535752442589,
-2.41176963566931, -2.40341346381303, 4.35578782060231, -4.02895296743614, 3.24060045335942,
4.86808301156485, -4.27450050279819, -3.05934862717024, -2.4565573123528, -0.9853565693853,
-2.40261773102976, -3.70834615526765, 3.35828117133431, -2.05032748483516, -3.50293429413932,
4.4317800899911]);

code = @alea begin
  
  mu1 = bitblast(DFiP, Normal(2.75, 0.5), num_pieces, -1.25, 6.75)
  mu2 = bitblast(DFiP, Normal(-2.75, 0.5), num_pieces, -6.75, 1.25)
  sigma1 = uniform(DFiP, 0.0 + 1/2^precision, 4.0)
  sigma2 = uniform(DFiP, 0.0 + 1/2^precision, 4.0)

  for y in ys[1:1]
    c1 = bitblast(DFiP, Normal(0, 1), num_pieces, -8.0, 8.0)
    c2 = bitblast(DFiP, Normal(0, 1), num_pieces, -8.0, 8.0)
    a = if flip(0.3) sigma1*c1 + mu1 else sigma2*c2 + mu2 end
    observe(a == y)
  end
  mu1
end

@time expectation(code)