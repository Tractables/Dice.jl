
var model = function() {

    var prior0 = beta({a: 1, b: 1})

    var z0 = bernoulli({p: prior0});
    var prior1 = beta({a: 1, b: 1})

    var z1 = bernoulli({p: prior1});
    var prior2 = beta({a: 1, b: 1})

    var z2 = bernoulli({p: prior2});
    var prior3 = beta({a: 1, b: 1})

    var z3 = bernoulli({p: prior3});
    var prior4 = beta({a: 1, b: 1})

    var z4 = bernoulli({p: prior4});
    var prior5 = beta({a: 1, b: 1})

    var z5 = bernoulli({p: prior5});
    var prior6 = beta({a: 1, b: 1})

    var z6 = bernoulli({p: prior6});
    var prior7 = beta({a: 1, b: 1})

    var z7 = bernoulli({p: prior7});
    var prior8 = beta({a: 1, b: 1})

    var z8 = bernoulli({p: prior8});
    var prior9 = beta({a: 1, b: 1})

    var z9 = bernoulli({p: prior9});
     var y = z0 
 | z1
 | z2
 | z3
 | z4
 | z5
 | z6
 | z7
 | z8
 | z9
;

                                  if (y) {
                                              factor(Gaussian({mu: 80, sigma: 2}).score(79));
                                                } else{
                                                            factor(Gaussian({mu: 135, sigma: 2}).score(79));
                                                              }

                                                  if (y) {
                                                              factor(Gaussian({mu: 80, sigma: 2}).score(136));
                                                                } else{
                                                                            factor(Gaussian({mu: 135, sigma: 2}).score(136));
                                                                              }


                                                                  if (y) {
                                                                              factor(Gaussian({mu: 80, sigma: 2}).score(79));
                                                                                } else{
                                                                                            factor(Gaussian({mu: 135, sigma: 2}).score(79));
                                                                                              }

                                                                                  if (y) {
                                                                                              factor(Gaussian({mu: 80, sigma: 2}).score(136));
                                                                                                } else{
                                                                                                            factor(Gaussian({mu: 135, sigma: 2}).score(136));
                                                                                                              }
                                                                                                  return prior0;
                                                                                                  }

var func1 = function() {
                return Infer({method: argv.m, particles: argv.s, samples: argv.s}, model);
                }

timeit( function() { return expectation(func1());})
      
